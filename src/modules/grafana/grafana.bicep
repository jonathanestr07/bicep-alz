@description('Specifies the name of the resource.')
param grafanaName string

@description('Specifies the location of the resource.')
param location string

@description('Specifies the tags of the resource.')
param tags object

@allowed([
  'Standard'
  'Essential'
])
@description('Specifies the SKU of the resource.')
param skuName string

@description('Specifies the identity type of the resource.')
param identityType string = 'SystemAssigned'

@description('Specifies the scope of the auto-generated domain name label.')
param autoGeneratedDomainNameLabelScope string = 'TenantReuse'

@description('Optional. Specifies the integrations for the Grafana resource.')
param grafanaIntegrations object = {}

@description('Specifies whether the public access is enabled for the resource.')
param publicAccessEnabled bool = false

@allowed([
  'Enabled'
  'Disabled'
])
@description('Specifies the zone redundancy for the resource.')
param zoneRedundancy string

// SMTP configurations
@description('Specifies the host for the SMTP configurations.')
param host string

@description('Specifies the username for the SMTP configurations.')
param username string

@secure()
@description('Specifies the password for the SMTP configurations.')
param password string

@description('Specifies the from address for the SMTP configurations.')
param fromAddress string

@description('Specifies the from name for the SMTP configurations.')
param fromName string

@allowed(['MandatoryStartTLS', 'NoStartTLS', 'OpportunisticStartTLS'])
@description('Specifies whether the startTLS is enabled for the SMTP configurations.')
param startTLS string

// Enterprise configurations
@description('Specifies the plan ID for the enterprise configurations.')
param planId string

@description('Optional. Specifies the object IDs of the Grafana admins.')
param grafanaAdminsObjectIds array = []

@description('Optional. Specifies the object IDs of the Grafana editors.')
param grafanaEditorObjectIds array = []

@description('Optional. Specifies the object IDs of the Grafana viewers.')
param grafanaViewerObjectIds array = []

@description('Optional. Specifies the private DNS zone ID for the private endpoint.')
param privateDnsZoneId string = ''

@description('Name of the virtual network')
param virtualNetworkName string = 'vnet'

@description('Name of the subnet within the virtual network')
param subnetName string = 'subnet'

@description('Name of the resource group containing the virtual network')
param resourceGroupNamevNet string = 'vnet'

resource grafana 'Microsoft.Dashboard/grafana@2023-09-01' = {
  name: grafanaName
  location: location
  tags: tags
  sku: {
    name: skuName
  }
  identity: {
    type: identityType
  }
  properties: {
    autoGeneratedDomainNameLabelScope: autoGeneratedDomainNameLabelScope
    zoneRedundancy: zoneRedundancy
    grafanaConfigurations: {
      smtp: {
        enabled: true
        host: host
        user: username
        password: password
        fromAddress: fromAddress
        startTLSPolicy: startTLS
        skipVerify: false
        fromName: fromName
      }
    }
    enterpriseConfigurations: !empty(planId) && skuName != 'Essential'
      ? {
          marketplaceAutoRenew: 'Enabled'
          marketplacePlanId: planId
        }
      : null
    grafanaIntegrations: grafanaIntegrations
    publicNetworkAccess: (publicAccessEnabled || skuName == 'Essential') ? 'Enabled' : 'Disabled' // Public access is enabled for Essential SKU as private link is not supported with this SKU
    apiKey: 'Enabled'
  }
}

resource privateEndpoint 'Microsoft.Network/privateEndpoints@2024-01-01' = if (!publicAccessEnabled) {
  name: 'pe-${grafanaName}'
  location: location
  tags: tags
  properties: {
    subnet: {
      id: resourceId(resourceGroupNamevNet, 'Microsoft.Network/virtualNetworks/subnets', virtualNetworkName, subnetName)
    }
    privateLinkServiceConnections: [
      {
        name: '${grafanaName}-link'
        properties: {
          privateLinkServiceId: grafana.id
          groupIds: [
            'grafana'
          ]
        }
      }
    ]
  }
}

resource privateDnsZone 'Microsoft.Network/privateEndpoints/privateDnsZoneGroups@2024-01-01' = if (!publicAccessEnabled && !empty(privateDnsZoneId)) {
  name: 'default'
  parent: privateEndpoint
  properties: {
    privateDnsZoneConfigs: [
      {
        name: uniqueString(grafanaName)
        properties: {
          privateDnsZoneId: privateDnsZoneId
        }
      }
    ]
  }
}

// Role assignments
// Admin
resource roleAssignmentAdmin 'Microsoft.Authorization/roleAssignments@2022-04-01' = [
  for Id in grafanaAdminsObjectIds: {
    name: guid(resourceGroup().id, 'grafanaAdminsRoleAssignment', Id)
    scope: grafana
    properties: {
      principalId: Id
      roleDefinitionId: subscriptionResourceId(
        'Microsoft.Authorization/roleDefinitions',
        '22926164-76b3-42b3-bc55-97df8dab3e41'
      )
    }
  }
]

// Editor
resource roleAssignmentEditor 'Microsoft.Authorization/roleAssignments@2022-04-01' = [
  for Id in grafanaEditorObjectIds: {
    name: guid(resourceGroup().id, 'grafanaAdminsRoleAssignment', Id)
    scope: grafana
    properties: {
      principalId: Id
      roleDefinitionId: subscriptionResourceId(
        'Microsoft.Authorization/roleDefinitions',
        'a79a5197-3a5c-4973-a920-486035ffd60f'
      )
    }
  }
]

// Viewer
resource roleAssignmentViewer 'Microsoft.Authorization/roleAssignments@2022-04-01' = [
  for Id in grafanaViewerObjectIds: {
    name: guid(resourceGroup().id, 'grafanaAdminsRoleAssignment', Id)
    scope: grafana
    properties: {
      principalId: Id
      roleDefinitionId: subscriptionResourceId(
        'Microsoft.Authorization/roleDefinitions',
        '60921a7e-fef1-4a43-9b16-a26c52ad4769'
      )
    }
  }
]

// Assign the 'Monitoring Reader' role to the Grafana identity of the Resource Group
resource roleAssignmentMonitoringReader 'Microsoft.Authorization/roleAssignments@2022-04-01' = {
  name: guid(resourceGroup().id, 'grafanaMonitoringReaderRoleAssignment')
  properties: {
    principalId: grafana.identity.principalId
    roleDefinitionId: subscriptionResourceId(
      'Microsoft.Authorization/roleDefinitions',
      '43d0d8ad-25c7-4714-9337-8ba259a9fe05'
    )
  }
}
