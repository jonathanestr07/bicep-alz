---
name: Release - Azure Firewall Rules

on:
  # push:
  #   branches:
  #     - main

  workflow_dispatch:
    inputs:
      enablePlatformConn:
        description: 'Enable the Platform Connectivity deployment'
        type: boolean
        default: false
      mode:
        description: 'Select update mode'
        type: choice
        options:
          - Auto check for IP Groups updates and run Firewall Policy
          - Force update IP Groups and run Firewall Policy
          - Force update IP Groups only
        default: Auto check for IP Groups updates and run Firewall Policy

env:
  PSRULE_DIRECTORY: ./
  INFRA_WORKING_DIRECTORY: ./

concurrency:
  group: deploy-alz-firewall
  cancel-in-progress: true

jobs:
  linting:
    name: Lint Testing
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: read
      statuses: write

    steps:
      - name: Check out repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

        # Linting
      - name: Lint Testing
        uses: super-linter/super-linter@v8
        env:
          DEFAULT_BRANCH: 'main'
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VALIDATE_JSON: true
          VALIDATE_MARKDOWN: true
          VALIDATE_POWERSHELL: true
          VALIDATE_YAML: true
          FILTER_REGEX_EXCLUDE: .*/(src/modules/[^/]+|docs/wiki/(Bicep|PS-Rule|Scripts|Pricing|Policy|Firewall)).*\.md$

  psrule-tests-modules:
    runs-on: ubuntu-latest
    name: Run PSRule Tests [Modules]
    permissions:
      contents: read
    steps:
      - name: Check out repository
        uses: actions/checkout@v5

      - name: PSRule >> Modules
        continue-on-error: true # This is to ensure that the workflow does not stop the next step while the modules are cleaned up
        uses: ./.github/actions/ps-rule
        with:
          option: 'ps-rule.yaml'
          bicepPath: 'src/modules'
          path: ${{ env.PSRULE_DIRECTORY }}

  psrule-tests-configuration:
    runs-on: ubuntu-latest
    name: Run PSRule Tests [Configuration]
    permissions:
      contents: read
    steps:
      - name: Check out repository
        uses: actions/checkout@v5

      - name: PSRule >> Configuration
        continue-on-error: true # Larger bicepparam files fail to expand correctly in PSRule
        uses: ./.github/actions/ps-rule
        with:
          option: 'ps-rule.yaml'
          bicepPath: 'src/configuration'
          path: ${{ env.PSRULE_DIRECTORY }}

  pester:
    runs-on: ubuntu-latest
    name: Run Pester Tests
    permissions:
      contents: read
    steps:
      - name: Check out repository
        uses: actions/checkout@v5

      - name: Run ./scripts/Test-AzPester.ps1
        uses: azure/powershell@v2
        with:
          inlineScript: |
            Write-Information "==> Installing needed modules..." -InformationAction Continue
            Install-Module -Name Pester -Force
            Import-Module Pester
            Write-Information "==> Running script..." -InformationAction Continue
            ./scripts/Test-AzPester.ps1
          azPSVersion: 'latest'

  build:
    name: Build
    if: always() && !cancelled() && !failure()
    runs-on: ubuntu-latest
    needs:
      - linting
      - psrule-tests-configuration
      - psrule-tests-modules
      - pester
    steps:
      - name: Check-Out Repository
        uses: actions/checkout@v5

      - name: Copy Files for Artifact Upload
        run: rsync -av --exclude='build' --exclude={'.vscode/','.ps-rule/','.ps-docs/','*.md'} ./. ./build
        working-directory: ${{ env.INFRA_WORKING_DIRECTORY }}

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: infrastructure
          path: ${{ env.INFRA_WORKING_DIRECTORY }}
          include-hidden-files: true #Required for .github folder to be uploaded in the artifact

  deploy_Platform_Connectivity:
    name: Platform Connectivity
    if: ${{ inputs.enablePlatformConn }}
    uses: ./.github/workflows/deploy.yml
    needs:
      - build
    with:
      artifactName: infrastructure
      environmentName: 'platform_connectivity'
      location: ${{ vars.LOCATION }}
      configKey: 'deploy_Platform_Connectivity'
      moduleName: 'Connectivity'
      managementGroupId: ${{ vars.MANAGEMENT_GROUP_ID_CONNECTIVITY }}
      deploymentLevel: 'managementGroup'
      whatif: true
    secrets: inherit
  deploy_Firewall_Rules:
    name: Azure Firewall Rules
    if: always() && !cancelled() && !failure()
    uses: ./.github/workflows/deploy_AzureFirewall.yml
    needs:
      - deploy_Platform_Connectivity
    with:
      artifactName: infrastructure
      environmentName: 'platform_firewall'
      location: ${{ vars.LOCATION }}
      configKey: 'deploy_Firewall_Rules'
      moduleName: 'Azure Firewall Rules'
      subscriptionId: ${{ vars.PLATFORM_CONN_SUBSCRIPTIONID }}
      resourceGroupName: 'arg-aue-plat-conn-network'
      deploymentLevel: 'resourceGroup'
      updateMode: ${{ inputs.mode }}
      whatif: true
    secrets: inherit
